name: 'publish'

on:
  push:
    branches: 
      - 'release'
    
jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.
      
      - name: install windows python embeddable package
        if: matrix.platform == 'windows-latest'
        uses: wei/wget@v1
        with:
          args: -O python.zip https://www.python.org/ftp/python/3.11.9/python-3.11.9-embed-amd64.zip

      - name: unpack python interpreter
        if: matrix.platform == 'windows-latest'
        run: |
          mkdir ./python
          Tar -xf ./python.zip -C ./python
        
      - name: install frontend dependencies
        run: yarn install # change this to npm, pnpm or bun depending on which one you use.

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Python dependencies (unix)
        if: matrix.platform != 'windows-latest'
        run: |
          python -m venv .venv
          ./.venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Python dependencies (windows)
        if: matrix.platform == "windows-latest"
        run: |
          python -m venv .venv
          ./.venv/Scripts/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set PYTHONPATH
        run: |
          echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
        with:
          tagName: v__VERSION__
          releaseName: 'AI TRANSLATOR v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
          updaterJsonPreferNsis: true
